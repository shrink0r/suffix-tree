#!/usr/bin/env php
<?php

use Shrink0r\SuffixTree\Builder\SuffixTreeBuilder;
use Shrink0r\SuffixTree\Renderer\GraphvizRenderer;

require dirname(__DIR__) . '/vendor/autoload.php';

if (count($argv) < 2) {
    return;
}
$suffix_tree = (new SuffixTreeBuilder)->build($argv[1]);
$lrs = $suffix_tree->findLrs();
$non_overlapping_lrs = $suffix_tree->findNonOverlappingLrs();

echo "// Input: $argv[1]\n";

if (empty($lrs)) {
    echo "// No repeated substrings found.\n";
} else {
    echo "// Longest repeated substring is: $lrs\n";
}
if (empty($non_overlapping_lrs)) {
    echo "// No repeated(non-overlapping) substrings found.\n";
} else {
    echo "// Longest repeated(non-overlapping) substring is: $non_overlapping_lrs\n";
}

if (count($argv) >= 3) {
    echo "// Has substring: " . ($suffix_tree->hasSubString($argv[2]) ? 'true' : 'false') . PHP_EOL;
    echo "// Has suffix: " . ($suffix_tree->hasSuffix($argv[2]) ? 'true' : 'false') . PHP_EOL;
}
echo "// Graphviz representation: \n" . (new GraphvizRenderer)->render($suffix_tree, $argv[1]) . PHP_EOL;
